{"version":3,"file":"contact.component.js","sourceRoot":"","sources":["../../Users/Tucker/Documents/Web Sites/Knights of Columbus/tmp/broccoli_type_script_compiler-input_base_path-DDaORxF6.tmp/0/src/app/contact/contact.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,qBAA6C,eAAe,CAAC,CAAA;AAG7D,gCAA+B,mBAAmB,CAAC,CAAA;AAUnD;IAEE,0BAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAK5C,YAAO,GAAU,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;IALN,CAAC;IAExD,mCAAQ,GAAR;IACA,CAAC;IAID,mCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACpD,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAA7B,CAA6B,EACzC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAA1B,CAA0B,CACpC,CAAC;IACJ,CAAC;IAED,yCAAc,GAAd,UAAe,QAAQ;QACrB,4CAA4C;QAE5C,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;YACpD,KAAK,CAAC,+EAA+E,CAAC,CAAC;QACzF,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;YAC/B,KAAK,CAAC,uEAAuE,CAAC,CAAC;QACjF,CAAC;IACH,CAAC;IAnCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,SAAS;YACnB,WAAW,EAAE,wBAAwB;YACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;YACpC,SAAS,EAAE,CAAC,gCAAc,EAAE,WAAI,EAAE,qBAAc,CAAC;SAClD,CAAC;;wBAAA;IA8BF,uBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,wBAAgB,mBA4B5B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Http, Response, HTTP_PROVIDERS} from '@angular/http';\n\nimport { Email } from './email.interface';\nimport { ContactService } from './contact.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'contact',\n  templateUrl: 'contact.component.html',\n  styleUrls: ['contact.component.css'],\n  providers: [ContactService, Http, HTTP_PROVIDERS]\n})\n\nexport class ContactComponent implements OnInit {\n\n  constructor(private _contactService: ContactService) { }\n\n  ngOnInit() {\n  }\n\n  public message: Email = { name: '', email: '', message: '' };\n\n  onSubmit() {\n    this._contactService.postEmail(this.message).subscribe(\n      response => this.handleResponse(response),\n      error => this.handleResponse(error)\n    );\n  }\n\n  handleResponse(response) {\n    // console.log(`msg is: {response.status}`);\n\n    if (response.status == 'success') {\n      this.message = { name: '', email: '', message: '' };\n      alert('We have received your submitted information and will get back to you shortly.');\n    }\n\n    if (response.status == 'error') {\n      alert('There was an error processing your contact. Please try again shortly.');\n    }\n  }\n}\n"]}